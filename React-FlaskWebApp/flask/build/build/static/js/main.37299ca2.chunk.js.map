{"version":3,"sources":["components/NavBar.js","views/Home/Home.js","components/Socket.js","views/Record/Record.js","components/Card.js","components/CardGrid.js","routes/App.js","views/Login/Login.js","serviceWorker.js","index.js"],"names":["NavBar","props","useState","isOpen","setIsOpen","style","fontFamily","fontWeight","fontStyle","backgroundColor","Navbar","light","expand","NavbarBrand","href","color","NavbarToggler","onClick","Collapse","navbar","Nav","className","path","name","map","data","key","NavItem","marginLeft","NavLink","Divider","Home","styles","makeStyles","theme","state","record","i","txt","typeWriter","length","document","getElementById","innerHTML","charAt","setTimeout","fontSize","margin","display","height","justifyContent","alignItems","id","React","Component","socket","socketIOClient","Record","getData","alert","window","location","blob","Blob","type","url","URL","createObjectURL","container","audioElement","createElement","setAttribute","appendChild","sourceElement","src","handleRecording","setState","player_in","parentNode","removeChild","player_out","token","onStop","bind","on","this","item","localStorage","getItem","off","recordedBlob","console","log","emit","err","textAlign","Container","marginBottom","mimeType","onData","strokeColor","noiseSuppression","echoCancellation","Button","marginTop","variant","Box","flexDirection","p","mx","useStyles","root","minWidth","rootLeader","title","desc","btn","CardTemplate","classes","Card","position","CardContent","Typography","gutterBottom","component","phone","link","CardGrid","bottom","hist","createBrowserHistory","routes","username","setUsername","password","setPassword","width","FormGroup","FormControl","InputLabel","Input","onChange","e","target","value","disabled","formdata","FormData","set","axios","post","headers","then","res","substring","setItem","App","history","prop","exact","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.37299ca2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport {Divider} from '@material-ui/core'\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    NavLink,\n    NavItem,\n    Nav\n} from 'reactstrap';\n\nconst NavBar = (props) => {\n    const [isOpen, setIsOpen] = useState(false)\n    const toggle = () => setIsOpen(!isOpen);\n    const list = () => {\n        return([\n            {path:\"/denoise\", name:\"Denoiser\"},\n            {path:\"/auth\", name:\"Token\"}\n        ]);\n    }\n    return(\n        <div style={{\n            fontFamily:'Riona Sans,sans-serif',\n            fontWeight: 'bolder',\n            fontStyle: 'italic',\n            backgroundColor: '#047BD5',\n        }}>\n            <Navbar style={{backgroundColor:'inherit'}} light expand=\"md\">\n                <NavbarBrand href=\"/\" style={{color: 'white'}}>Flipkart Grid 2.0</NavbarBrand>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    <Nav className=\"ml-auto\" navbar>\n                            {\n                                list().map((data,key)=>(\n                                    <NavItem className=\"ml-auto\" key={key} style={{marginLeft:'10px'}}>\n                                        <NavLink href={data.path} style={{color: 'white'}}>{data.name}</NavLink>\n                                    </NavItem>\n                                ))\n                            }\n                    </Nav>\n                </Collapse>\n            </Navbar>\n            <Divider style={{backgroundColor:'black'}}></Divider>\n        </div>\n    )\n}\n\nexport default NavBar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport './Home.css';\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            record: false\n        }\n    }\n\n    componentDidMount() {\n        var i = 0;\n        var txt = 'Team Comrades '; /* The text */\n        var speed = 125; /* The speed/duration of the effect in milliseconds */\n\n        function typeWriter() {\n            if (i < txt.length) {\n                document.getElementById(\"typewriter\").innerHTML += txt.charAt(i);\n                i++;\n                setTimeout(typeWriter, speed);\n            }\n        }\n\n        typeWriter()\n    }\n\n    styles = makeStyles(theme => ({\n\n    }));\n\n    render() {\n        return (\n            <div style={{\n                fontFamily: 'Riona Sans,sans-serif',\n                fontWeight: 'bolder',\n                fontSize: '200%',\n                fontStyle: 'italic',\n                color: '#047BD5',\n                margin: 'auto',\n                display: 'flex',\n                height: '40vh',\n                justifyContent: 'center',\n                alignItems: 'center'\n            }} >\n                <div id=\"typewriter\" />\n            </div>\n        )\n    }\n}\n\nexport default Home","import socketIOClient from 'socket.io-client'\n\nexport var socket = socketIOClient('http://localhost:5000/')\n","import React from 'react'\n\nimport { ReactMic } from 'react-mic'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { \n    Button,\n    Box } from '@material-ui/core'\n\nimport { socket } from '../../components/Socket'\n\nimport {\n    Container,\n} from 'reactstrap'\n\nclass Record extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            record: false,\n            token: '',\n        }\n        this.onStop = this.onStop.bind(this)\n    }\n\n    getData = (data) => {\n        if (typeof (data) === 'string') {\n            alert(data)\n            window.location.href = '/auth'\n        }\n        else {\n            const blob = new Blob([data], { type: 'audio/wav' })\n            const url = URL.createObjectURL(blob)\n            const container = document.getElementById('output_container')\n            const audioElement = document.createElement('audio');\n            audioElement.setAttribute('controls', true);\n            audioElement.setAttribute('id', 'player_in')\n            container.appendChild(audioElement);\n            const sourceElement = document.createElement('source');\n            audioElement.appendChild(sourceElement);\n            sourceElement.src = url;\n            sourceElement.type = 'audio/wav';\n        }\n    }\n\n    componentDidMount() {\n        socket.on(\"receive\", this.getData)\n        var item = localStorage.getItem('gridToken')\n        this.setState({\n            ...this.state.record,\n            token: item\n        })\n    }\n\n    componentWillUnmount() {\n        socket.off(\"receive\")\n    }\n\n    styles = makeStyles(theme => ({\n\n    }));\n\n    handleRecording = () => {\n        this.setState({ record: !this.state.record });\n        const player_in = document.getElementById('player_in')\n        if (player_in) {\n            player_in.parentNode.removeChild(player_in)\n        }\n        const player_out = document.getElementById('player_out')\n        if (player_out) {\n            player_out.parentNode.removeChild(player_out)\n        }\n    }\n\n    onData(recordedBlob) {\n        console.log('Recording')\n    }\n\n    onStop(recordedBlob) {\n        try {\n            recordedBlob['token'] = this.state.token\n            socket.emit('send', recordedBlob)\n            const blob = new Blob([recordedBlob['blob']], { type: 'audio/wav' })\n            const url = URL.createObjectURL(blob)\n            const container = document.getElementById('input_container')\n            const audioElement = document.createElement('audio');\n            audioElement.setAttribute('controls', true);\n            audioElement.setAttribute('id', 'player_out')\n            container.appendChild(audioElement);\n            const sourceElement = document.createElement('source');\n            audioElement.appendChild(sourceElement);\n            sourceElement.src = url;\n            sourceElement.type = 'audio/wav';\n        }\n        catch (err) {\n            console.log(err)\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <br />\n                <h3 style={{\n                    fontFamily: 'Riona Sans,sans-serif',\n                    fontWeight: 'bold',\n                    textAlign: 'center'\n                }}>\n                    Welcome to our Denoiser!\n                </h3>\n                <br />\n                <Container style={{\n                    marginBottom: '50px',\n                    justifyContent: 'center',\n                    alignItems: 'center'\n                }}>\n                    <div style={{ textAlign: 'center' }}>\n                        <ReactMic\n                            record={this.state.record}\n                            className=\"sound-wave\"\n                            mimeType=\"audio/wav\"\n                            onStop={this.onStop}\n                            onData={this.onData}\n                            strokeColor=\"white\"\n                            backgroundColor=\"#047BD5\"\n                            noiseSuppression=\"true\"\n                            echoCancellation=\"true\"\n                        />\n                        <br />\n                        <Button style={{ marginTop: '15px', marginBottom: '20px' }} variant=\"contained\" color=\"secondary\" onClick={this.handleRecording} >Start / Stop</Button>\n                        <br />\n                        <Box display=\"flex\" justifyContent=\"center\" flexDirection=\"row\">\n                            <Box p={1} mx=\"auto\">\n                                <h5 style={{\n                                    fontFamily: 'Riona Sans,sans-serif'\n                                }}>\n                                    Input Audio :\n                                </h5>\n                                <div id=\"input_container\" />\n                            </Box>\n                            <Box p={1} mx=\"auto\">\n                                <h5 style={{\n                                    fontFamily: 'Riona Sans,sans-serif'\n                                }}>\n                                    Denoised Audio :\n                                </h5>\n                                <div id=\"output_container\" />\n                            </Box>                           \n                        </Box>\n                    </div>\n                </Container>\n            </div>\n        )\n    }\n}\n\nexport default Record","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n    Card,\n    CardContent,\n    Typography\n} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 320,\n        margin: '10px',\n        backgroundColor: '#047BD5'\n    },\n    rootLeader: {\n        minWidth: 320,\n        margin: '10px',\n        backgroundColor: 'green'\n    },\n    title: {\n        fontSize: 14,\n        fontFamily: 'Riona Sans,sans-serif',\n        color: 'white'\n    },\n    name: {\n        fontFamily: 'Riona Sans,sans-serif',\n        color: 'white'\n    },\n    desc: {\n        fontFamily: 'Riona Sans,sans-serif',\n        color: 'white'\n    },\n    btn: {\n        fontFamily: 'Riona Sans,sans-serif',\n        color: 'white'\n    }\n});\n\nfunction CardTemplate(props) {\n    const classes = useStyles();\n\n    return (\n        <Card className={props.data.position === \"Leader\" ? classes.rootLeader : classes.root} variant=\"outlined\">\n            <CardContent>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                    {props.data.position}\n                </Typography>\n                <Typography className={classes.name} variant=\"h5\" component=\"h2\">\n                    {props.data.name}\n                </Typography>\n                <Typography className={classes.desc} variant=\"body2\" component=\"p\">\n                    {props.data.phone}\n                    <br />\n                </Typography>\n                <Typography className={classes.desc} variant=\"body2\" component=\"p\">\n                    {props.data.link}\n                <br />\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}\n\nexport default CardTemplate","import React from 'react'\nimport Card from './Card'\n\nvar data = [\n    { position: 'Leader', name: 'Vikas K Mahendar',phone: '+91-77081-46322', link: 'vikasmahendar2000@gmail.com' },\n    { position: 'Member', name: 'Mukund Varma T',  phone: '+91-99529-51152', link: 'mukundvarmat@gmail.com' },\n    { position: 'Member', name: 'Mukesh V',        phone: '+91-80568-36775', link: 'mukeshvinayak2001@gmail.com' },\n]\n\nfunction CardGrid() {\n    return (\n        <footer>\n            <div style={{\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'center',\n                bottom: '4px'\n            }}>\n                {\n                    data.map((item, key) => {\n                        return <Card data={item} key={key} />\n                    })\n                }\n            </div>\n        </footer>\n    )\n}\n\nexport default CardGrid","import React from 'react';\nimport { Router, Route, Switch } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\n\nimport NavBar from '../components/NavBar'\n\nimport Home from '../views/Home/Home'\nimport Record from '../views/Record/Record';\nimport CardGrid from '../components/CardGrid';\nimport Login from '../views/Login/Login';\n\nvar hist = createBrowserHistory();\n\nvar routes = [\n    { path: \"/\", component: Home },\n    { path: \"/denoise\", component: Record },\n    { path: \"/auth\", component: Login}\n];\n\nexport default class App extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <NavBar />\n                <Router history={hist}>\n                    <Switch>\n                        {\n                            routes.map((prop, key) => {\n                                return <Route exact path={prop.path} key={key} component={prop.component} />;\n                            })\n                        }\n                    </Switch>\n                </Router>\n                <CardGrid />\n            </div>\n        )\n    }\n}","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport {\n    FormGroup,\n    FormControl,\n    InputLabel,\n    Input,\n    Container,\n    Button\n} from \"@material-ui/core\";\n\nexport default function Login() {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    function handleSubmit() {\n        var btn = document.getElementById('submitbtn')\n        btn.disabled = true\n\n        if (username.length > 0 && password.length > 0) {\n            var formdata = new FormData()\n            formdata.set('username', username)\n            formdata.set('password', password)\n\n            var headers = {\n                headers: {\n                    'Access-Control-Allow-Origin': '*',\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            axios.post('http://localhost:5000/token', formdata, headers)\n                .then((res) => {\n                    var data = res.data\n                    switch (data.substring(0, 3)) {\n                        case '404':\n                        case '405':\n                        case '500':\n                            alert(data)\n                            window.location.href = \"/auth\"\n                            break;\n                        default:\n                            localStorage.setItem('gridToken', data)\n                            alert('Token has been saved')\n                            window.location.href = '/denoise'\n                    }\n                })\n        }\n        else{\n            alert('Empty Username / Password')\n            window.location.href = '/auth'\n        }\n    }\n\n    function handleName(e) {\n        setUsername(e.target.value)\n    }\n    function handlePasswd(e) {\n        setPassword(e.target.value)\n    }\n\n    return (\n        <div style={{ width: '30%', margin: 'auto', textAlign: 'center' }}>\n            <Container>\n                <br />\n                <div style={{\n                    fontFamily: 'Riona Sans,sans-serif',\n                    fontWeight: 'bolder',\n                    fontSize: '200%',\n                    fontStyle: 'italic',\n                    color: '#047BD5',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center'\n                }} >\n                    Retrieve your token\n                </div>\n                <br />\n                <form>\n                    <FormGroup>\n                        <FormControl>\n                            <InputLabel>Username</InputLabel>\n                            <Input id=\"input1\" onChange={handleName} />\n                        </FormControl>\n                    </FormGroup>\n                    <br />\n                    <FormGroup>\n                        <FormControl>\n                            <InputLabel>Password</InputLabel>\n                            <Input id=\"input2\" type=\"password\" onChange={handlePasswd} />\n                        </FormControl>\n                    </FormGroup>\n                </form>\n                <br />\n                <Button id=\"submitbtn\" onClick={handleSubmit}>\n                    Login\n                </Button>\n                <br />\n            </Container>\n            <br />\n        </div>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nimport App from './routes/App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}